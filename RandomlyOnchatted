local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = Players.LocalPlayer

if not localPlayer or not localPlayer.Character or not localPlayer.Character:FindFirstChild("HumanoidRootPart") then
    print("LocalPlayer or their HumanoidRootPart is not available.")
    return
end

local function getNearestPlayer()
    local nearestPlayer = nil
    local shortestDistance = math.huge
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local distance = (localPlayer.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).magnitude
            if distance < shortestDistance then
                shortestDistance = distance
                nearestPlayer = player
            end
        end
    end
    return nearestPlayer
end

local function sendRandomMessages()
    local nearestPlayer = getNearestPlayer()
    if not nearestPlayer then
        print("No nearest player found.")
        return
    end

    local msg = {
        "Hello, " .. nearestPlayer.Name .. "! This is " .. localPlayer.Name .. ".",
        "Welcome, " .. nearestPlayer.Name .. "! From " .. localPlayer.Name .. ".",
        "Have a great day, " .. nearestPlayer.Name .. "! Cheers from " .. localPlayer.Name .. ".",
        "Enjoy your game, " .. nearestPlayer.Name .. "! Best wishes from " .. localPlayer.Name .. ".",
        "Keep up the good work, " .. nearestPlayer.Name .. "! Signed, " .. localPlayer.Name .. "."
    }

    local randomIndex = math.random(1, #msg)
    local args = {
        [1] = msg[randomIndex],
        [2] = "All"
    }
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
end

sendRandomMessages()
