-- Function to remove existing GUI
local function removeExistingGUI()
    for _, child in ipairs(game.CoreGui:GetChildren()) do
        if child:IsA("ScreenGui") and child.Name == "LadderGui" then
            child:Destroy()
        end
    end
end

-- Remove any existing GUI before creating a new one
removeExistingGUI()

-- Function to create a part with given properties
local function createLadderPart(size, position, color, parent)
    local part = Instance.new("Part")
    part.Size = size
    part.Position = position
    part.Anchored = true
    part.BrickColor = BrickColor.new(color)
    part.Parent = parent
    return part
end

-- Function to create and configure GUI elements
local function createGui()
    -- Create the ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "LadderGui"
    screenGui.Parent = game.CoreGui

    -- Create the Frame
    local frame = Instance.new("Frame")
    frame.Parent = screenGui
    frame.BackgroundColor3 = Color3.new(0, 0, 0)
    frame.BackgroundTransparency = 0.5
    frame.BorderColor3 = Color3.new(0, 0, 1)
    frame.BorderSizePixel = 2
    frame.Position = UDim2.new(0.7, 0, 0.4, 0)
    frame.Size = UDim2.new(0.2, 0, 0.3, 0)
    frame.Active = true
    frame.Draggable = true

    -- Configure UI Corner for Frame
    local frameCorner = Instance.new("UICorner")
    frameCorner.CornerRadius = UDim.new(0.2, 0)
    frameCorner.Parent = frame

    -- Create the Number of Rungs TextBox
    local rungsTextBox = Instance.new("TextBox")
    rungsTextBox.Parent = frame
    rungsTextBox.BackgroundColor3 = Color3.new(1, 1, 1)
    rungsTextBox.BackgroundTransparency = 0.5
    rungsTextBox.Position = UDim2.new(0.1, 0, 0.1, 0)
    rungsTextBox.Size = UDim2.new(0.8, 0, 0.3, 0)
    rungsTextBox.TextColor3 = Color3.new(0, 0, 0)
    rungsTextBox.Font = Enum.Font.SourceSansLight
    rungsTextBox.PlaceholderText = "Enter number of rungs"
    rungsTextBox.TextScaled = true
    rungsTextBox.TextSize = 14
    rungsTextBox.TextWrapped = true

    -- Configure UI Corner for RungsTextBox
    local rungsBoxCorner = Instance.new("UICorner")
    rungsBoxCorner.CornerRadius = UDim.new(0.2, 0)
    rungsBoxCorner.Parent = rungsTextBox

    -- Create the Spawn Ladder Button
    local button = Instance.new("TextButton")
    button.Parent = frame
    button.BackgroundColor3 = Color3.new(0, 1, 0)
    button.Position = UDim2.new(0.1, 0, 0.5, 0)
    button.Size = UDim2.new(0.8, 0, 0.3, 0)
    button.Text = "Spawn Ladder"
    button.TextColor3 = Color3.new(0, 0, 0)
    button.Font = Enum.Font.SourceSansLight
    button.TextScaled = true

    -- Function to handle button click
    local function onButtonClick()
        local numberOfRungs = tonumber(rungsTextBox.Text)
        if not numberOfRungs or numberOfRungs < 1 then
            warn("Invalid number of rungs")
            return
        end

        local character = game.Players.LocalPlayer.Character
        if not character then return end
        
        local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
        local forwardVector = humanoidRootPart.CFrame.LookVector
        local basePosition = humanoidRootPart.Position + forwardVector * 5

        -- Define ladder dimensions and colors
        local ladderWidth = 3
        local ladderHeight = 0.5
        local ladderDepth = 1
        local rungWidth = 3
        local rungHeight = 0.5
        local rungDepth = 0.2
        local rungSpacing = 2 -- Distance between rungs
        local ladderColor = "Bright green"
        local rungColor = "Bright yellow"

        -- Remove existing ladders
        for _, part in ipairs(workspace:GetChildren()) do
            if part:IsA("Part") and (part.BrickColor == BrickColor.new(ladderColor) or part.BrickColor == BrickColor.new(rungColor)) then
                part:Destroy()
            end
        end

        -- Create ladder model
        local ladderModel = Instance.new("Model")
        ladderModel.Name = "Ladder"
        ladderModel.Parent = workspace

        -- Create ladder sections
        for i = 0, numberOfRungs - 1 do
            local baseSectionPosition = basePosition + Vector3.new(0, i * (rungSpacing + rungHeight), 0)
            
            -- Create vertical beams for each section
            createLadderPart(Vector3.new(ladderDepth, rungSpacing, ladderWidth), baseSectionPosition + Vector3.new(-ladderWidth/2, rungSpacing/2, 0), ladderColor, ladderModel) -- Left Beam
            createLadderPart(Vector3.new(ladderDepth, rungSpacing, ladderWidth), baseSectionPosition + Vector3.new(ladderWidth/2, rungSpacing/2, 0), ladderColor, ladderModel) -- Right Beam

            -- Create rungs with spacing
            for rungIndex = 0, math.floor(rungSpacing / (rungHeight + 0.1)) - 1 do -- Adjust number of rungs per section
                local rungY = baseSectionPosition.Y + (rungIndex * (rungHeight + 0.1))
                local rungPosition = baseSectionPosition + Vector3.new(0, rungY - baseSectionPosition.Y, 0)
                createLadderPart(Vector3.new(rungWidth, rungHeight, rungDepth), rungPosition + Vector3.new(0, 0, -ladderDepth/2), rungColor, ladderModel) -- Front Rung
                createLadderPart(Vector3.new(rungWidth, rungHeight, rungDepth), rungPosition + Vector3.new(0, 0, ladderDepth/2), rungColor, ladderModel) -- Back Rung
            end
        end
    end

    -- Connect button click event to handler function
    button.MouseButton1Click:Connect(onButtonClick)
end

-- Create GUI when the game starts
createGui()
